README file:a. Full Name- RUPASREE ROYb. Student's ID- 7840368768c. In this assignment, we have simulated a distributed hash table or database system. In this a (key,value) pair has been assigned to each of the servers.The client has a pair of university name and a corresponding key value. The client searches for a  value corresponding to a university name. It connects with Server 1 via UDP.The Server 1 connects to Server 2 via TCP and Server 2 connects to Server 3 via TCP. There are two clients and each client communicates separately with the server. The client searches for a university name and gets the corresponding key associated with it from its text file. It then queries the server 1 with the key and searches for the corresponding value associated with it. If the Server 1 has the value for the searched key it returns it to the client and the UDP connection is still open for the other client to communicate with it. If server 1 doesn't have  it then it queries server 2 via TCP connection. If Server 2 has it then it sends it to server 1 which then sends to client. However if it doesn't have then it queries server 3 via TCP connection and sends the reply to server 2 which then sends it to server 1 and then back to the client. The same process is repeated for client 2.d. The code files are:i) client1.c and client2.c - In this code we search the client#.txt file and obtain the corresponding key associated with it. The client then connects to server 1 via    UDP and searches for the corresponding value associated with the key. ii) dhtserver1.c - In this code the server 1 read its own file. If it has the value corresponding to the key associated with the university name the client requests for it sends it to client. Otherwise it connects with server 2 and requests it for the value corresponding to the key.iii) dhtserver2.c - In this code, the server 2 read its own file. Like server 1 it also checks if it has the value corresponding to the key, if yes then it sends it to server 1.If it doesnt have then it connects to server 3 and requests for the corresponding value.iv) dhtserver3.c - In this code, the server 3 read its own file and sends back the value associated with the key to server 2.e. Open terminals for client 1, server 1,server 2,server 3 separately and give the following commands in order in different terminals:

gcc dhtserver1.c -o dhtserver1.out and then ./dhtserver1.out
gcc dhtserver1.c -o dhtserver1.out and then ./dhtserver2.out
gcc dhtserver1.c -o dhtserver1.out and then ./dhtserver3.out
gcc client1.c -o client1.out and then ./client1.out 

Same way we need to do for client2. 

f. There are few discrepencies in the project. There are few printf statements which are printed wrongly.f. The format of all messages which are exchanged are the same as those given in the specification.g.Yes I used code for establishing the UDP and TCP connection from the site http://www.cs.ucsb.edu and beej tutorial. I have also used parts of code for reading the text file and storing it in an array( I took reference from stackoverflow ). 